version: 2.1
description: # Reusable Plugin Pipeline

jobs:
  build_plugin:
    docker:
      - image: circleci/node:10
    working_directory: ~/plugin
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install yarn
          command: |
            sudo npm install -g yarn --quiet
            yarn install --pure-lockfile
      - run:
          name: Run Toolkit Build
          command: 'npx grafana-toolkit plugin:ci-build'
      - save_cache:
          paths:
            - node_modules
          key: yarn-packages-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: .
          paths:
            - ci

  build_docs:
    docker:
      - image: circleci/node:10
    working_directory: ~/plugin
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install yarn
          command: |
            sudo npm install -g yarn --quiet
            yarn install --pure-lockfile
      - run:
          name: Build Docs
          command: 'npx grafana-toolkit plugin:ci-docs'
      - save_cache:
          paths:
            - node_modules
          key: yarn-packages-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: .
          paths:
            - ci

  build_linux_x64:
    docker:
      - image: circleci/node:10
    working_directory: ~/plugin
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install yarn
          command: |
            sudo npm install -g yarn --quiet
            yarn install --pure-lockfile
      - run:
          name: Run Toolkit CI
          command: 'npx grafana-toolkit plugin:ci-build --backend linux_x64'
      - save_cache:
          paths:
            - node_modules
          key: yarn-packages-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: .
          paths:
            - ci

  build_osx:
    docker:
      - image: circleci/node:10
    working_directory: ~/plugin
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install yarn
          command: |
            sudo npm install -g yarn --quiet
            yarn install --pure-lockfile
      - run:
          name: Run Toolkit CI
          command: 'npx grafana-toolkit plugin:ci-build --backend osx'
      - save_cache:
          paths:
            - node_modules
          key: yarn-packages-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: .
          paths:
            - ci

  build_win64:
    docker:
      - image: circleci/node:10
    working_directory: ~/plugin
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install yarn
          command: |
            sudo npm install -g yarn --quiet
            yarn install --pure-lockfile
      - run:
          name: Run Toolkit CI
          command: 'npx grafana-toolkit plugin:ci-build --backend win64'
      - save_cache:
          paths:
            - node_modules
          key: yarn-packages-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: .
          paths:
            - ci

  bundle:
    docker:
      - image: circleci/node:10
    working_directory: ~/plugin
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - attach_workspace:
          at: .
      - run:
          name: Bundle Distribution
          command: 'npx grafana-toolkit plugin:ci-bundle'
      - persist_to_workspace:
          root: .
          paths:
            - ci
      - store_artifacts:
          path: ci

  test_master:
    docker:
      - image: circleci/node:10-browsers
    working_directory: ~/plugin
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Setup Grafana (local install)
          command: |
            wget https://dl.grafana.com/oss/release/grafana_6.2.5_amd64.deb
            sudo apt-get install -y adduser libfontconfig1
            sudo dpkg -i grafana_6.2.5_amd64.deb
            sudo locate grafana
            sudo cp ci/grafana-test-env/custom.ini /usr/share/grafana/config/custom.ini
            sudo cp ci/grafana-test-env/custom.ini /etc/grafana/grafana.ini
            sudo service grafana-server start
            grafana-cli --version
            echo now wait 10 seconds...
            sleep 10

      - run:
          name: Run e2e tests
          command: |
            npx grafana-toolkit plugin:ci-test
      - persist_to_workspace:
          root: .
          paths:
            - ci

  test_latest:
    docker:
      - image: circleci/node:10-browsers
    working_directory: ~/plugin
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Run Toolkit CI
          command: 'echo TODO...'

  report:
    docker:
      - image: circleci/node:10
    working_directory: ~/plugin
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Toolkit Report
          command: 'npx grafana-toolkit plugin:ci-report'
      - store_artifacts:
          path: ci

  deploy:
    docker:
      - image: circleci/node:10
    working_directory: ~/plugin
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Toolkit Deploy
          command: 'npx grafana-toolkit plugin:ci-deploy'
      - store_artifacts:
          path: ci

workflows:
  version: 2
  build_bundle_test_deploy:
    jobs:
      - build_plugin
      - build_docs
      - build_linux_x64
      - build_osx
      - build_win64
      - bundle:
          requires:
            - build_plugin
            - build_docs
            - build_linux_x64
            - build_osx
            - build_win64
      - test_master:
          requires:
            - bundle
      - test_latest:
          requires:
            - bundle
      - report:
          requires:
          #  - test_master
            - test_latest
      - deploy:
          requires:
            - report
